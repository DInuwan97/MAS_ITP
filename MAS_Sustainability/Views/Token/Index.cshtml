@using MAS_Sustainability.Models;
@model MainModel

@{
    Layout = "~/Views/Home/LayoutBody.cshtml";
}




@{
    ViewBag.Title = "Index";
}


@if (Model != null)
{


<div class="main-panel">

    <div class="content">


        <!--start of the panel 1 -->

        <div class="col-md6">
            <!--before : col-md-6, changed to fit to the size-->

            <div class="card">

                <div class="card-body">


                    <ul class="nav nav-pills nav-secondary  nav-pills-no-bd nav-pills-icons justify-content-center" id="pills-tab-with-icon" role="tablist">


                        <li class="nav-item" style="width:40%;  border-radius: 10px;">
                            <a class="nav-link active" id="pills-home-tab-icon" data-toggle="pill" href="#pills-home-icon" role="tab" aria-controls="pills-home-icon" aria-selected="true">
                                Home
                            </a>
                        </li>

                        <!-- panel 2 button -->

                        <li class="nav-item" style="width:40%; display: inline; border-radius: 10px;">
                            <a class="nav-link" id="pills-profile-tab-icon" data-toggle="pill" href="#pills-profile-icon" role="tab" aria-controls="pills-profile-icon" aria-selected="false">

                                Profile
                            </a>
                        </li>

                    </ul>


                    <div class="tab-content mt-2 mb-3" id="pills-with-icon-tabContent">

                        <div class="tab-pane fade show active" id="pills-home-icon" role="tabpanel" aria-labelledby="pills-home-tab-icon">

                            <p>




                                <!-- datatable of panel 1 -->

                                <div class="col-md12">

                                    <!--before : col-md-12, changed to fit to the size-->

                                    <div class="card">
                                        <div class="card-header">
                                            <div class="d-flex align-items-center">
                                                <h4 class="card-title">Home</h4>
                                                <button class="btn btn-primary btn-round ml-auto" data-toggle="modal" data-target="#addRowModal">
                                                    <i class="fa fa-plus"></i>
                                                    Add Row
                                                </button>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <!-- Modal -->
                                            <div class="modal fade" id="addRowModal" tabindex="-1" role="dialog" aria-hidden="true">
                                                <div class="modal-dialog" role="document">
                                                    <div class="modal-content">
                                                        <div class="modal-header no-bd">
                                                            <h5 class="modal-title">
                                                                <span class="fw-mediumbold">
                                                                    New
                                                                </span>
                                                                <span class="fw-light">
                                                                    Row
                                                                </span>
                                                            </h5>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>



                                                        <div class="modal-body">
                            <p class="small">Create a new row using this form, make sure you fill them all</p>
                            <form>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group form-group-default">
                                            <label>Name</label>
                                            <input id="addName" type="text" class="form-control" placeholder="fill name">
                                        </div>
                                    </div>
                                    <div class="col-md-6 pr-0">
                                        <div class="form-group form-group-default">
                                            <label>Position</label>
                                            <input id="addPosition" type="text" class="form-control" placeholder="fill position">
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group form-group-default">
                                            <label>Office</label>
                                            <input id="addOffice" type="text" class="form-control" placeholder="fill office">
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer no-bd">
                            <button type="button" id="addRowButton" class="btn btn-primary">Add</button>
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                        </div>






                    </div>
                </div>
            </div>

            <div class="table-responsive">
                <table id="add-row" class="display table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Problem Name</th>
                            <th>Attention Level</th>
                            <th>Location</th>

                            <th>Added By</th>
                            <th>Actions</th>
                        </tr>
                    </thead>

                    <tbody>

                            @foreach (var no_of_tokens in Model.ListToken)
                            {
                                if (@no_of_tokens.TokenStatus.Equals("Pending"))
                                {


                        <tr>
                            <td>@no_of_tokens.ProblemName</td>
                            <td>@no_of_tokens.Location</td>

                            <td>

                                @if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 20)
                                {
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                }
                                else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 40 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 20)
                                {
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                }
                                else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 60 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 40)
                                {
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>

                                }
                                else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 80 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 60)
                                {
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>

                                }
                                else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 100 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 80)
                                {
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                    <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                }

                                @no_of_tokens.AttentionLevel


                            </td>

                            <td>@no_of_tokens.UserName</td>

                            <td>
                                <span class="badge badge-success"><a href="@Url.Action("View", "Token", new { @id = @no_of_tokens.TokenAuditID})"><strong>View</strong></a></span>
                                <span class="badge badge-warning">Eject</span>
                            </td>                                               
                        </tr>
                                }

                            }






                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- end of datatable of panel 1 -->
										</p>

										</div>




<div class="tab-pane fade" id="pills-profile-icon" role="tabpanel" aria-labelledby="pills-profile-tab-icon">
    <p>


        <!-- datatable of panel 2 -->

        <div class="row">
            <div class="col-md-12">
                <div class="card">












                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="basic-datatables" class="display table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Problem Name</th>
                                        <th>Attention Level</th>
                                        <th>Reparation</th>

                                        <th>Actions</th>
                                    </tr>
                                </thead>



                                <tbody>
                                    @foreach (var no_of_tokens in Model.TokenList)
                                    {
                                        if (@no_of_tokens.TokenStatus != ("Pending"))
                                        {


                                    <tr>
                                        <td>@no_of_tokens.ProblemName</td>

                                        <td>

                                            @if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 20)
                                            {
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                            }
                                            else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 40 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 20)
                                            {
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                            }
                                            else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 60 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 40)
                                            {
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>

                                            }
                                            else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 80 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 60)
                                            {
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" data-index="4" data-html="true"></i>

                                            }
                                            else if (Convert.ToDouble(@no_of_tokens.AttentionLevel) <= 100 && Convert.ToDouble(@no_of_tokens.AttentionLevel) > 80)
                                            {
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                                <i class="fas fa-star py-2 px-1 rate-popover" style="color:red" data-index="4" data-html="true"></i>
                                            }

                                            @no_of_tokens.AttentionLevel

                                        </td>

                                        @using (Html.BeginForm("Update", "Token", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                        {
                                            @Html.AntiForgeryToken()
                                        <td>



                                            @if (@no_of_tokens.SentUser != Model.LoggedUserEmail)
                                            {

                                                <div class="select2-input">

                                                    <select class="custom-select" disabled name="ReparationDepartment" id="inputGroupSelect02" required="" style="margin-right:8px; height:40px;">

                                                        <option value="@no_of_tokens.TokenStatus">@no_of_tokens.TokenStatus</option>
                                                        <option value="Factory Engineering">Factory Engineering</option>
                                                        <option value="Production Engineering">Production Engineering</option>
                                                        <option value="Autonomation">Autonomation</option>
                                                        <option value="MOS">MOS</option>
                                                        <option value="RM">RM</option>
                                                        <option value="Quality">Quality</option>
                                                        <option value="FG">FG</option>
                                                        <option value="Technical">Technical</option>
                                                        <option value="Cutting">Cutting</option>
                                                        <option value="HR">HR</option>
                                                        <option value="Operation">Operation</option>
                                                        <option value="Production VSM 01">Production VSM 01</option>
                                                        <option value="Production VSM 02">Production VSM 02</option>
                                                        <option value="Production VSM 03">Production VSM 03</option>
                                                        <option value="Production VSM 04">Production VSM 04</option>
                                                        <option value="Pre-Sewing">Pre-Sewing</option>
                                                        <option value="Emblishment">Emblishment</option>
                                                        <option value="IE">IE</option>
                                                    </select>
                                                </div>

                                            }
                                            else
                                            {
                                                <div class="select2-input">

                                                    <select class="custom-select"  name="ReparationDepartment" id="inputGroupSelect02" required="" style="margin-right:8px; height:40px;">

                                                        <option value="@no_of_tokens.TokenStatus">@no_of_tokens.TokenStatus</option>
                                                        <option value="Factory Engineering">Factory Engineering</option>
                                                        <option value="Production Engineering">Production Engineering</option>
                                                        <option value="Autonomation">Autonomation</option>
                                                        <option value="MOS">MOS</option>
                                                        <option value="RM">RM</option>
                                                        <option value="Quality">Quality</option>
                                                        <option value="FG">FG</option>
                                                        <option value="Technical">Technical</option>
                                                        <option value="Cutting">Cutting</option>
                                                        <option value="HR">HR</option>
                                                        <option value="Operation">Operation</option>
                                                        <option value="Production VSM 01">Production VSM 01</option>
                                                        <option value="Production VSM 02">Production VSM 02</option>
                                                        <option value="Production VSM 03">Production VSM 03</option>
                                                        <option value="Production VSM 04">Production VSM 04</option>
                                                        <option value="Pre-Sewing">Pre-Sewing</option>
                                                        <option value="Emblishment">Emblishment</option>
                                                        <option value="IE">IE</option>
                                                    </select>
                                                </div>
                                            }



                                            <input type="hidden" name="TokenAuditID" value=" @no_of_tokens.TokenAuditID">




                                        </td>

                                        <td>
                                            @if (@no_of_tokens.SentUser != Model.LoggedUserEmail)
                                            {
                                                <button class="btn btn-success btn-sm" disabled><strong>Update</strong></button>
                                                <button class="btn btn-danger btn-sm" disabled><strong>Delete</strong></button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-success btn-sm"><strong>Update</strong></button>
                                                <button class="btn btn-danger btn-sm"><strong>Delete</strong></button>
                                            }
                                        </td>
                                        }

                                    </tr>

                                        }
                                    }



                                        </tbody>









                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <!-- end of datatable of panel 2 -->

    </p>


</div>

									</div>
								</div>
							</div>
						</div>







		</div>

		</div>

}


<script src="~/Content/assets/js/core/jquery.3.2.1.min.js"></script>
<script src="~/Content/assets/js/core/popper.min.js"></script>
<script src="~/Content/assets/js/core/bootstrap.min.js"></script>
<!-- jQuery UI -->
<script src="~/Content/assets/js/plugin/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>
<script src="~/Content/assets/js/plugin/jquery-ui-touch-punch/jquery.ui.touch-punch.min.js"></script>
<!-- Bootstrap Toggle -->
<script src="~/Content/assets/js/plugin/bootstrap-toggle/bootstrap-toggle.min.js"></script>
<!-- jQuery Scrollbar -->
<script src="~/Content/assets/js/plugin/jquery-scrollbar/jquery.scrollbar.min.js"></script>
<!-- Datatables -->
<script src="~/Content/assets/js/plugin/datatables/datatables.min.js"></script>
<!-- Atlantis JS -->
<script src="~/Content/assets/js/atlantis.min.js"></script>
<!-- Atlantis DEMO methods, don't include it in your project! -->
<script src="~/Content/assets/js/setting-demo2.js"></script>
<script>
    $(document).ready(function () {
        $('#basic-datatables').DataTable({
        });

        $('#multi-filter-select').DataTable({
            "pageLength": 5,
            initComplete: function () {
                this.api().columns().every(function () {
                    var column = this;
                    var select = $('<select class="form-control"><option value=""></option></select>')
                        .appendTo($(column.footer()).empty())
                        .on('change', function () {
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^' + val + '$' : '', true, false)
                                .draw();
                        });

                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                });
            }
        });

        // Add Row
        $('#add-row').DataTable({
            "pageLength": 5,
        });


        $('#state').select2({
            theme: "bootstrap"
        });

        /* validate */

        // validation when select change
        $("#state").change(function () {
            $(this).valid();
        })
        var action = '<td> <div class="form-button-action"> <button type="button" data-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';

        $('#addRowButton').click(function () {
            $('#add-row').dataTable().fnAddData([
                $("#addName").val(),
                $("#addPosition").val(),
                $("#addOffice").val(),
                action
            ]);
            $('#addRowModal').modal('hide');

        });
    });
</script>

